org: edsabino
app: pet-users-service
service: pet-users-service

frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: '20201221'
  environment:
    MONGO_URI: mongodb+srv://adm:9XIh4bdywjikBOKu@development.khj7l.mongodb.net/pet-user-db
    SNS_TOPIC_EMAIL: ${self:custom.snsTopicEmail}
    SECRET: segredosecreto
    REDIS_URI: rediss://pet-services-general-001.po8pi6.0001.use1.cache.amazonaws.com:6379
  vpc:
    securityGroupIds:
      - sg-091117135899c803e
    subnetIds:
      - subnet-0b49faca3de7fe473
      - subnet-0447a6adfb37258a5
  iam:
    role:
      statements:
        - Effect: 'Allow'
          Action:
            - "sns:Publish"
          Resource:
            - ${self:custom.snsTopicEmail}
  
custom:
  snsTopicEmail: arn:aws:sns:us-east-1:136545430773:pet-emails

functions:
  create:
    handler: handlers.create
    events:
      - http:
          path: /
          method: post
          cors: true

  get:
    handler: handlers.get
    events:
      - http:
          path: /{_id}
          method: get
          cors: true

  update:
    handler: handlers.update
    events:
      - http:
          path: /{_id}
          method: put
          cors: true

  list:
    handler: handlers.list
    events:
      - http:
          path: /
          method: get
          cors: true

  forgot_password:
    handler: handlers.forgotPassword
    events:
      - http:
          path: /forgot_password/{email}
          method: post
          cors: true

  login:
    handler: handlers.login
    events:
      - http:
          path: /login
          method: post
          cors: true

plugins:
  - serverless-offline
